[main]
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm 
jdbcRealm.permissionsLookupEnabled = true 
jdbcRealm.authenticationQuery = select password from USERS where username = ? 
jdbcRealm.userRolesQuery = select role from USERS where username = ? 

#jdbcRealm.permissionsQuery = SELECT roleper FROM roles_permissions WHERE role_name = ? 

credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.storedCredentialsHexEncoded = false
credentialsMatcher.hashIterations = 5000
jdbcRealm.credentialsMatcher = $credentialsMatcher


ds = com.jolbox.bonecp.BoneCPDataSource 
ds.driverClass=com.mysql.jdbc.Driver 
ds.jdbcUrl=jdbc:mysql://desarrollo.is.escuelaing.edu.co:3306/bdprueba
ds.username = bdprueba
ds.password = bdprueba 
jdbcRealm.dataSource=$ds 


authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter

authc.loginUrl = /login.xhtml
authc.successUrl = /index.xhtml
roles.unauthorizedUrl = /unauthorized.xhtml

ssl.enabled = false

# Use default password matcher (SHA-256, 500000 hash iterations)
#passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher

# Filter Setup
[urls]

/javax.faces.resource/** = anon 

/login.xhtml = authc

/logout = logout

/restricted/** = authc, roles[admin]
/employees/** = authc, roles[employee]
/open/** = anon

/** = anon


#https://github.com/danielmt/shiro-primefaces-example/blob/master/src/main/webapp/WEB-INF/shiro.ini
#http://stackoverflow.com/questions/34535123/apache-shiro-hashedcredentialsmatcher-generates-wrong-salt